# Implement your initial tasks here
# -------------------------------------------------

- name: set cluster facts
  set_fact:
    cluster_fqn: "{{ cluster_name }}-{{ cloud_provider }}"

- name: set the local kubeconfig location
  set_fact:
    local_kubeconfig_file: "~/.kube/{{ cluster_fqn }}"
    
# extract some basic cluster information

- name: get DNS information
  k8s_info:
    api_version: config.openshift.io/v1
    kind: dns
    name: cluster
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: r_cluster_dns

- name: set cluster facts (aws)
  when: cloud_provider == "aws"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.tags.Name.split('-')[:-1] | join('-') }}"

- name: set cluster facts (azure)
  when: cloud_provider == "azure"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('/')[4].split('-')[:-1] | join('-') }}"
    _cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('/')[4].split('-')[:-1] | join('_') }}"

- name: set cluster facts (gcp)
  when: cloud_provider == "gcp"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('-')[:2] | join('-') }}"

# set some VM facts

- name: set VM facts
  set_fact:
    ssh_public_key_path: "{{ cluster_ssh_key_dir }}/{{ cluster_fqn }}.pub"
    instance_name: "{{ cluster_label }}-vm"
    
- name: gather facts (aws)
  when: cloud_provider == "aws"
  block:
    - name: get instance information
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "{{ instance_name }}"
          instance-state-name: ["running"]
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{ aws_default_region }}"
      register: vm_info

    - name: set public ip and public dns
      set_fact:
        instance_public_ip: "{{ vm_info.instances[0].public_ip_address }}"
        instance_public_dns: "{{ vm_info.instances[0].public_dns_name }}"

- name: gather facts (azure)
  when: cloud_provider == "azure"
  block:
    - name: get instance information
      azure.azcollection.azure_rm_virtualmachine_info:
        resource_group: "{{ azure_resource_group }}"
        name: "{{ instance_name}}"
        client_id: "{{ azure_client_id }}"
        secret: "{{ azure_password }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription }}"
      register: vm_info

    - name: get public IP address information
      azure.azcollection.azure_rm_publicipaddress_info:
        resource_group: "{{ azure_resource_group }}"
        name: "{{ vm_info.vms[0].name }}-pip"
        client_id: "{{ azure_client_id }}"
        secret: "{{ azure_password }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription }}"
      register: pip_info

    - name: set public ip, no dns
      set_fact:
        instance_public_ip: "{{ pip_info.publicipaddresses[0].ip_address }}"

- name: set more VM facts
  set_fact:
    ssh_public_key_path: "{{ cluster_ssh_key_dir }}/{{ cluster_fqn }}.pub"
    instance_name: "{{ cluster_label }}-vm"