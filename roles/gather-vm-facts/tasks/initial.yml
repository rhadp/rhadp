# Implement your initial tasks here
# -------------------------------------------------

- name: set vm facts
  set_fact:
    instance_name: "{{ cluster_label }}-vm"

- name: gather facts (aws)
  when: cloud_provider == "aws"
  block:
    - name: get instance information
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "{{ instance_name }}"
          instance-state-name: ["running"]
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{ aws_default_region }}"
      register: vm_info

    - name: check if instance exists
      fail:
        msg: "Instance '{{ instance_name }}' does not exist. Aborting."
      when: vm_info.instances | length == 0

    - name: set public ip and public dns
      set_fact:
        instance_public_ip: "{{ vm_info.instances[0].public_ip_address }}"
        instance_public_dns: "{{ vm_info.instances[0].public_dns_name }}"

- name: gather facts (azure)
  when: cloud_provider == "azure"
  block:
    - name: get instance information
      azure.azcollection.azure_rm_virtualmachine_info:
        resource_group: "{{ azure_resource_group }}"
        name: "{{ instance_name}}"
        client_id: "{{ azure_client_id }}"
        secret: "{{ azure_password }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription }}"
      register: vm_info

    - name: check if instance exists
      fail:
        msg: "Instance '{{ instance_name }}' does not exist. Aborting."
      when: vm_info.instances | length == 0

    - name: get public IP address information
      azure.azcollection.azure_rm_publicipaddress_info:
        resource_group: "{{ azure_resource_group }}"
        name: "{{ vm_info.vms[0].name }}-pip"
        client_id: "{{ azure_client_id }}"
        secret: "{{ azure_password }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription }}"
      register: pip_info

    - name: set public ip, no dns
      set_fact:
        instance_public_ip: "{{ pip_info.publicipaddresses[0].ip_address }}"
