# Implement your install deployment tasks here
# -------------------------------------------------

- name: check if the ssh key exists
  stat:
    path: "{{ builder_ssh_key_dir }}/{{ cluster_name }}-vm"
  register: builder_ssh_key_stat

- name: generate ssh keys
  when: builder_ssh_key_stat.stat.exists == false
  openssh_keypair:
    type: rsa
    size: 2048
    path: "{{ builder_ssh_key_dir }}/{{ cluster_name }}-vm"

- name: import the vm private key
  slurp:
    src: "{{ builder_ssh_key_dir }}/{{ cluster_name }}-vm"
  register: vm_ssh_private_key

- name: import the vm public key
  slurp:
    src: "{{ builder_ssh_key_dir }}/{{ cluster_name }}-vm.pub"
  register: vm_ssh_pub_key
  
- name: create namespace
  k8s:
    kind: Namespace
    name: "{{ platform_builder_namespace }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"

- name: create default vm secrets
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - builder-secret-public-key.yml.j2
    - builder-secret-private-key.yml.j2

- name: create default vm secrets for devspaces
  when: rhadp_deploy_devspaces | bool
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - devspaces-secret-private-key.yml.j2

- name: create vm instances
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - builder-virtualmachine.yml.j2