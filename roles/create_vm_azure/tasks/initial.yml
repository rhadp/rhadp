# Implement your initial tasks here
# -------------------------------------------------

- name: set cluster facts
  set_fact:
    cluster_fqn: "{{ cluster_name }}-{{ cloud_provider }}"

- name: set the local kubeconfig location
  set_fact:
    local_kubeconfig_file: "~/.kube/{{ cluster_fqn }}"

# extract some basic cluster information
- name: get DNS information
  k8s_info:
    api_version: config.openshift.io/v1
    kind: dns
    name: cluster
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: r_cluster_dns

- name: set cluster facts (aws)
  when: cloud_provider == "aws"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.tags.Name.split('-')[:-1] | join('-') }}"

- name: set cluster facts (azure)
  when: cloud_provider == "azure"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('/')[4].split('-')[:-1] | join('-') }}"
    _cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('/')[4].split('-')[:-1] | join('_') }}"

- name: set cluster facts (gcp)
  when: cloud_provider == "gcp"
  set_fact:
    cluster_label: "{{ r_cluster_dns.resources.0.spec.privateZone.id.split('-')[:2] | join('-') }}"

# set some VM facts

- name: set VM facts
  set_fact:
    ssh_public_key_path: "{{ cluster_ssh_key_dir }}/{{ cluster_fqn }}.pub"
    instance_name: "{{ cluster_label }}-vm"
    vnet_name: "{{ cluster_label }}-vm-vnet"
    subnet_name: "{{ cluster_label }}-vm-subnet"
    nsg_name: "{{ cluster_label }}-vm-nsg"
    nic_name: "{{ cluster_label }}-vm-nic"
