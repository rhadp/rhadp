# Implement your install deployment tasks here
# -------------------------------------------------

- name: configure the 'metal' cluster topology
  when: cluster_topology == 'metal' and setup_baremetal_worker_node | bool == true
  block:
    - name: make control plane nodes schedulable
      shell: |
        oc patch scheduler cluster --type merge -p '{"spec":{"mastersSchedulable":true}}' \
        --kubeconfig="$HOME/.kube/{{ cluster_fqn }}"

    - name: find all worker machine sets
      kubernetes.core.k8s_info:
        api_version: machine.openshift.io/v1beta1
        kind: MachineSet
        namespace: openshift-machine-api
        kubeconfig: "{{ local_kubeconfig_file }}"
      register: found_machinesets

    - name: set replica count to 0 for existing machine sets (worker nodes)
      ignore_errors: true
      kubernetes.core.k8s:
        api_version: machine.openshift.io/v1beta1
        kind: MachineSet
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace }}"
        definition:
          spec:
            replicas: 0
        state: present
        apply: yes
        kubeconfig: "{{ local_kubeconfig_file }}"
      loop: "{{ found_machinesets.resources }}"
      when: found_machinesets.resources | length > 0

    - name: pause to allow control plane nodes to adjust
      pause:
        seconds: 180
      
# add the bare-metal worker node to the cluster
- name: add the bare-metal machine sets
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - "machineset_aws_metal.yml.j2"

- name: wait for metal node(s) to be ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
    - "node.kubernetes.io/instance-type={{ aws_metal_instance_type }}"
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: r_nodes
  until:
  - r_nodes.resources | length | int == aws_metal_instance_count | int
  delay: 30
  retries: 120
  
- name: find metal nodes
  k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
      - node.kubernetes.io/instance-type={{ aws_metal_instance_type }}
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: found_metal_nodes
  
- name: label metal nodes (builder)
  shell: |
    oc label node {{ item }} rhadp.node-role/builder='true' \
    --overwrite=true \
    --kubeconfig="$HOME/.kube/{{ cluster_fqn }}"

    oc label node {{ item }} rhadp.node-role/metal='true' \
    --overwrite=true \
    --kubeconfig="$HOME/.kube/{{ cluster_fqn }}"
  with_items:
    - "{{ found_metal_nodes.resources | map(attribute='metadata.name') | list }}"