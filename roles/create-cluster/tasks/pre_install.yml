# Implement your pre-install deployment tasks here
# -------------------------------------------------

- name: check if the installer binary exists
  stat:
    path: "{{ openshift_install_dir }}/{{ installer_binary_fqn }}"
  register: installer_binary_stat

- name: download the installer binary
  when: installer_binary_stat.stat.exists == false
  block:
    - name: set download url
      set_fact:
        installer_binary_url: "{{ openshift_clients_url }}/{{ cluster_arch }}/clients/ocp/stable/openshift-install-{{ installer_architecture }}.tar.gz"

    - name: set download url
      when: cluster_arch == "multi"
      set_fact:
        installer_binary_url: "{{ openshift_clients_url }}/{{ cluster_arch }}/clients/ocp/stable/{{ control_plane_arch }}/openshift-install-{{ installer_architecture }}.tar.gz"

    - name: download the installer binary
      shell: |
        cd {{ openshift_install_dir }}

        curl -o {{ installer_binary }}-{{ installer_architecture }}.tar.gz \
          -L {{ installer_binary_url }}

        tar xzf ./{{ installer_binary }}-{{ installer_architecture }}.tar.gz

        mv {{ installer_binary }} {{ installer_binary_fqn }}

        rm {{ installer_binary }}-{{ installer_architecture }}.tar.gz

- name: create dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ cluster_metadata_dir }}/{{ cluster_fqn }}"

# FIXME: check if the keys already exist, otherwise generate them
- name: generate SSH keys
  openssh_keypair:
    type: rsa
    size: 2048
    path: "{{ cluster_ssh_key_dir }}/{{ cluster_fqn }}"

- name: import the public key
  slurp:
    src: "{{ cluster_ssh_key_dir }}/{{ cluster_fqn }}.pub"
  register: cluster_ssh_pub_key
    
- name: import pull secret
  slurp:
    src: "{{ pull_secret_file }}"
  register: cluster_pull_secret