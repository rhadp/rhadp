# see https://github.com/keycloak/keycloak/blob/main/operator/src/test/resources/example-realm.yaml
apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: openshift-realm
  namespace: {{ keycloak_namespace }}
spec:
  keycloakCRName: keycloak
  realm:
    realm: openshift
    enabled: true
    displayName: "Automotive Development Platform"

    sslRequired: external
    registrationAllowed: true
    registrationEmailAsUsername: true
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false

    clients:
      - name: openshift
        clientId: openshift
        enabled: true
        standardFlowEnabled: true
        directAccessGrantsEnabled: true
        secret: "{{ keycloak_client_secret }}"
        redirectUris:
          - "https://oauth-openshift.apps.{{ cluster_name }}.{{ cluster_domain }}/oauth2callback/*"
          - "https://console-openshift-console.apps.{{ cluster_name }}.{{ cluster_domain }}/*"
        webOrigins:
          - "https://oauth-openshift.apps.{{ cluster_name }}.{{ cluster_domain }}"
          - "https://console-openshift-console.apps.{{ cluster_name }}.{{ cluster_domain }}"
        bearerOnly: false
        publicClient: false
        serviceAccountsEnabled: true
        authorizationServicesEnabled: true
        fullScopeAllowed: true
        protocol: openid-connect
        consentRequired: false
        frontchannelLogout: true
        access:
          view: true
          configure: true
          manage: true

    users:
      - username: developer
        email: developer@{{ default_tld }}
        emailVerified: true
        enabled: true
        firstName: "Dev"
        lastName: "Null"
        credentials:
          - type: password
            value: "developer"
            temporary: false
        realmRoles:
          - default-roles-openshift
        groups:
          - platform-users

      - username: devops
        email: devops@{{ default_tld }}
        emailVerified: true
        enabled: true
        firstName: "Dev"
        lastName: "Ops"
        credentials:
          - type: password
            value: "devops"
            temporary: false
        realmRoles:
          - default-roles-openshift
        groups:
          - platform-users

      - username: tester
        email: tester@{{ default_tld }}
        emailVerified: true
        enabled: true
        firstName: "Big"
        lastName: "Test"
        credentials:
          - type: password
            value: "tester"
            temporary: false
        realmRoles:
          - default-roles-openshift
        groups:
          - platform-users

    clientScopes:
      - name: acr
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "acr loa level"
            protocol: "openid-connect"
            protocolMapper: "oidc-acr-mapper"
            consentRequired: false
            config:
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"

      - name: basic
        protocol: "openid-connect"
        description: "OpenID Connect scope for add all basic claims to the token"
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "sub"
            protocol: "openid-connect"
            protocolMapper: "oidc-sub-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              access.token.claim: "true"
          - name: "auth_time"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "AUTH_TIME"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "auth_time"
              jsonType.label: "long"

      - name: email
        protocol: "openid-connect"
        description: "OpenID Connect built-in scope: email"
        attributes:
          include.in.token.scope: "true"
          consent.screen.text: "${emailScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: "email"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "email"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "email"
              jsonType.label: "String"
          - name: "email verified"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "emailVerified"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "email_verified"
              jsonType.label: "boolean"

      - name: profile
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "true"
          consent.screen.text: "${profileScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: "full name"
            protocol: "openid-connect"
            protocolMapper: "oidc-full-name-mapper"
            consentRequired: false
            config:
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              userinfo.token.claim: "true"
          - name: "website"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "website"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "website"
              jsonType.label: "String"
          - name: "zoneinfo"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "zoneinfo"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "zoneinfo"
              jsonType.label: "String"
          - name: "family name"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "lastName"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "family_name"
              jsonType.label: "String"
          - name: "picture"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "picture"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "picture"
              jsonType.label: "String"
          - name: "locale"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "locale"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "locale"
              jsonType.label: "String"
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "gender"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "gender"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "gender"
              jsonType.label: "String"
          - name: "nickname"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "nickname"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "nickname"
              jsonType.label: "String"
          - name: "given name"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "firstName"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "given_name"
              jsonType.label: "String"
          - name: "updated at"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "updatedAt"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "updated_at"
              jsonType.label: "long"
          - name: groups_mapper
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "true"
              access.token.claim: "true"
              claim.name: "groups"

      - name: roles
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "false"
          consent.screen.text: "${rolesScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: "audience resolve"
            protocol: "openid-connect"
            protocolMapper: "oidc-audience-resolve-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              access.token.claim: "true"
          - name: "realm roles"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-realm-role-mapper"
            consentRequired: false
            config:
              user.attribute: "foo"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "realm_access.roles"
              jsonType.label: "String"
              multivalued: "true"
          - name: "client roles"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-client-role-mapper"
            consentRequired: false
            config:
              user.attribute: "foo"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "resource_access.${client_id}.roles"
              jsonType.label: "String"
              multivalued: "true"

      - name: service_account
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "Client IP Address"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "clientAddress"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "clientAddress"
              jsonType.label: "String"
          - name: "Client Host"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "clientHost"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "clientHost"
              jsonType.label: "String"
          - name: "Client ID"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "client_id"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "client_id"
              jsonType.label: "String"

      - name: web-origins
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "false"
          consent.screen.text: ""
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "allowed web origins"
            protocol: "openid-connect"
            protocolMapper: "oidc-allowed-origins-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              access.token.claim: "true"

      - name: address
        protocol: "openid-connect"
        description: "OpenID Connect built-in scope: address"
        attributes:
          include.in.token.scope: "true"
          consent.screen.text: "${addressScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: "street address"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "street"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "street_address"
              jsonType.label: "String"
          - name: "region"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "region"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "region"
              jsonType.label: "String"
          - name: "locality"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "city"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "locality"
              jsonType.label: "String"
          - name: "country"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "country"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "country"
              jsonType.label: "String"
          - name: "postal code"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "zip"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "postal_code"
              jsonType.label: "String"
          - name: "formatted"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "formatted"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "formatted"
              jsonType.label: "String"

      - name: phone
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "true"
          consent.screen.text: "${phoneScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: "phone number verified"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "phoneNumberVerified"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "phone_number_verified"
              jsonType.label: "boolean"
          - name: "phone number"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "phoneNumber"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "phone_number"
              jsonType.label: "String"

      - name: offline_access
        protocol: "openid-connect"
        attributes:
          consent.screen.text: "${offlineAccessScopeConsentText}"
          display.on.consent.screen: "true"

      - name: organization
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "true"
          consent.screen.text: "${organizationScopeConsentText}"
          display.on.consent.screen: "true"
        protocolMappers:
          - name: organization
            protocol: "openid-connect"
            protocolMapper: "oidc-organization-membership-mapper"
            consentRequired: false
            config:
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "organization"
              jsonType.label: "String"
              multivalued: "true"

      - name: microprofile-jwt
        protocol: "openid-connect"
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "upn"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-attribute-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "upn"
              jsonType.label: "String"
          - name: "groups"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-realm-role-mapper"
            consentRequired: false
            config:
              introspection.token.claim: "true"
              multivalued: "true"
              user.attribute: "foo"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "groups"
              jsonType.label: "String"

      - name: role_list
        protocol: "saml"
        attributes:
          display.on.consent.screen: "false"
        protocolMappers:
          - name: "role list"
            protocol: "saml"
            protocolMapper: "saml-role-list-mapper"
            consentRequired: false
            config:
              attribute.nameformat: "Basic"
              attribute.name: "Role"

      - name: saml_organization
        protocol: saml
        attributes:
          display.on.consent.screen: "false"
        protocolMappers:
          - name: organization
            protocol: saml
            protocolMapper: "saml-organization-membership-mapper"
            consentRequired: false

    defaultDefaultClientScopes:
      - acr
      - basic
      - email
      - profile
      - roles
      - service_account
      - web-origins

    defaultOptionalClientScopes:
      - address
      - phone
      - offline_access
      - organization
      - microprofile-jwt
      - role_list
      - saml_organization
    
    groups:
      - name: platform-users
        path: "/platform-users"
        subGroups: []
        attributes: {}
        realmRoles: []
        clientRoles: {}
    
    defaultGroups:
      - "/platform-users"

    defaultRole:
      name: default-roles-openshift
      description: "${role_default-roles}"
      composite: true
      clientRole: false

    {% if github_oauth_client_id is defined %}
    identityProviders:
      - alias: github
        displayName: 'GitHub Login'
        providerId: github
        enabled: true
        updateProfileFirstLoginMode: 'on'
        trustEmail: false
        storeToken: false
        addReadTokenRoleOnCreate: false
        authenticateByDefault: false
        linkOnly: false
        hideOnLogin: false
        firstBrokerLoginFlowAlias: first broker login
        config:
          acceptsPromptNoneForwardFromClient: 'false'
          clientId: "{{ github_oauth_client_id }}"
          disableUserInfo: 'false'
          filteredByClaim: 'false'
          syncMode: LEGACY
          clientSecret: "{{ github_oauth_client_secret }}"
          caseSensitiveOriginalUsername: 'false'
    {% endif %}

